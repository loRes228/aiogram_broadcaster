[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "aiogram_broadcaster"
description = "A lightweight aiogram-based library for broadcasting Telegram messages."
requires-python = ">=3.9"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "LORES" }
]
maintainers = [
    { name = "LORES" }
]
dynamic = [
    "version"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
keywords = [
    "api",
    "asyncio",
    "boadcasting",
    "bot",
    "broadcast",
    "broadcaster",
    "framework",
    "mailing",
    "mailing-system",
    "telegram",
    "wrapper"
]
dependencies = [
    "aiogram>=3.17.0"
]

[project.optional-dependencies]
all = [
    "aiogram_broadcaster[dev,test,butcher,sqlalchemy,mongo,redis,jinja]"
]
dev = [
    "mypy~=1.14.0",
    "ruff~=0.8.6",
    "types-aiofiles~=24.1.0",
    "motor-types~=1.0.0b4"
]
test = [
    "pytest~=8.3.0",
    "pytest-asyncio~=0.23.0",
]
butcher = [
    "jinja2~=3.1.0"
]
sqlalchemy = [
    "sqlalchemy~=2.0.0"
]
mongo = [
    "motor~=3.6.0"
]
redis = [
    "redis[hiredis]~=5.2.0"
]
jinja = [
    "jinja2~=3.1.0"
]


[project.urls]
Homepage = "https://github.com/loRes228/aiogram_broadcaster.git"
Documentation = "https://github.com/loRes228/aiogram_broadcaster/wiki"
"Source code" = "https://github.com/loRes228/aiogram_broadcaster.git"
"Issue Tracker" = "https://github.com/loRes228/aiogram_broadcaster/issues"


[tool.hatch.version]
path = "aiogram_broadcaster/__meta__.py"

[tool.hatch.envs.default]
path = ".venv"

[tool.hatch.metadata]
allow-direct-references = true


[tool.ruff]
target-version = "py39"
cache-dir = ".cache/ruff"
line-length = 99
output-format = "full"
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ALL"
]
extend-select = [
]
ignore = [
    "D", # pydocstyle
    "CPY", # flake8-copyright
    "FA", # flake8-future-annotations
    "EM", # flake8-errmsg
    "A", # flake8-builtins
    "ANN401", # any-type
    "TRY003", # raise-vanilla-args
    "PLW3201", # bad-dunder-method-name
    "PLR0904", # too-many-public-methods
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0914", # too-many-locals
    "PLR0915", # too-many-statements
    "PLR0916", # too-many-boolean-expressions
    "PLR0917", # too-many-positional-arguments
    "PLR1702", # too-many-nested-blocks
    "PLR6301", # no-self-use
]
logger-objects = [
    "aiogram_broadcaster.utils.logger.logger"
]

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = [
    "S101" # assert
]

[tool.ruff.lint.isort]
lines-after-imports = 2
force-wrap-aliases = true
combine-as-imports = true

[tool.ruff.lint.pylint]
allow-magic-value-types = []

[tool.ruff.lint.flake8-type-checking]
strict = true


[tool.mypy]
python_version = "3.9"
cache_dir = ".cache/mypy"
strict = true
show_error_context = true
show_column_numbers = true
pretty = true
plugins = [
    "pydantic.mypy",
    "sqlalchemy.ext.mypy.plugin"
]


[tool.pytest.ini_options]
cache_dir = ".cache/pytest"
testpaths = "tests"
addopts = "-vv"
asyncio_mode = "auto"
